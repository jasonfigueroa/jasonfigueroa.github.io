<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Jason Figueroa</title><link href="https://jasonfigueroa.github.io/" rel="alternate"></link><link href="https://jasonfigueroa.github.io/feeds/all.atom.xml" rel="self"></link><id>https://jasonfigueroa.github.io/</id><updated>2021-07-31T20:59:00-05:00</updated><entry><title>Local MySQL Database with Docker Compose</title><link href="https://jasonfigueroa.github.io/local-mysql-database-with-docker-compose.html" rel="alternate"></link><published>2021-07-31T20:59:00-05:00</published><updated>2021-07-31T20:59:00-05:00</updated><author><name>Jason Figueroa</name></author><id>tag:jasonfigueroa.github.io,2021-07-31:/local-mysql-database-with-docker-compose.html</id><summary type="html">&lt;p&gt;These are some brief instructions for installing a local MySQL database, using Docker Compose, for local development.&lt;/p&gt;
&lt;h2&gt;Install Containers&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Download the docker-compose.yml file&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wget https://gist.githubusercontent.com/jasonfigueroa/78db9eb5797b3351007b44fb18eae956/raw/871f6ee5354bfd61fcb53dace54a56c29b5f1a56/docker-compose.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;Install the containers&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;docker-compose up
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Setup Non-Root User&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;See the containers running&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;docker-compose ps
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;Take …&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;These are some brief instructions for installing a local MySQL database, using Docker Compose, for local development.&lt;/p&gt;
&lt;h2&gt;Install Containers&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Download the docker-compose.yml file&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wget https://gist.githubusercontent.com/jasonfigueroa/78db9eb5797b3351007b44fb18eae956/raw/871f6ee5354bfd61fcb53dace54a56c29b5f1a56/docker-compose.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;Install the containers&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;docker-compose up
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Setup Non-Root User&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;See the containers running&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;docker-compose ps
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;Take note of the Name of the database container, in this example it's docker_db_1&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="Database container name in the terminal" src="images/database-container-name.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Connect to the database server using the database container name&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;docker &lt;span class="nb"&gt;exec&lt;/span&gt; -it docker_db_1 mysql -uroot -prootpass
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;Grant all privileges to the non-root user&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;GRANT ALL PRIVILEGES ON *.* TO &lt;span class="s1"&gt;&amp;#39;user&amp;#39;&lt;/span&gt;@&lt;span class="s1"&gt;&amp;#39;%&amp;#39;&lt;/span&gt; WITH GRANT OPTION&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;Flush privileges&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;FLUSH PRIVILEGES&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Download the Chinook MySQL Import File&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Download the MySQL Chinook database import file&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wget https://raw.githubusercontent.com/lerocha/chinook-database/master/ChinookDatabase/DataSources/Chinook_MySql_AutoIncrementPKs.sql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Login and Import the Chinook Database&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Navigate to &lt;a href="http://localhost:8088" target="_blank"&gt;http://localhost:8088&lt;/a&gt; in a browser&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Login with username: user, password: userpass, database: Chinook&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="Login page for Adminer" src="images/adminer-login.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Click on Import at the top left.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="Adminer import database link" src="images/adminer-database-import-link.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Under File Upload click on Browse and select the Chinook_MySql_AutoIncrementPKs.sql&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click the Execute button and wait a minute or two&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You should see the sidebar populate with the tables.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="Adminer sidebar with tables" src="images/sidebar-with-tables.png"&gt;&lt;/p&gt;
&lt;h2&gt;Destroy Containers and Volume&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Destroy the Containers with &lt;code&gt;docker-compose down -v&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;</content><category term="docker"></category><category term="docker"></category><category term="mysql"></category></entry><entry><title>Install a Vagrant Box with MySQL</title><link href="https://jasonfigueroa.github.io/install-a-vagrant-box-with-mysql.html" rel="alternate"></link><published>2021-07-25T19:05:00-05:00</published><updated>2021-07-25T19:05:00-05:00</updated><author><name>Jason Figueroa</name></author><id>tag:jasonfigueroa.github.io,2021-07-25:/install-a-vagrant-box-with-mysql.html</id><content type="html">&lt;p&gt;I created a repo with a bash script and Vagrantfile for quickly spinning up a MySQL database, accessible from the host machine. I will be using this kind of setup for tinkering with Entity Framework Core and MySQL.&lt;/p&gt;
&lt;p&gt;The repo and basic instructions can be found &lt;a href="https://github.com/jasonfigueroa/vagrant-mysql" target="_blank"&gt;here&lt;/a&gt;.&lt;/p&gt;</content><category term="vagrant"></category><category term="vagrant"></category><category term="mysql"></category></entry><entry><title>Pelican Python3 Makefile error</title><link href="https://jasonfigueroa.github.io/pelican-python3-makefile-error.html" rel="alternate"></link><published>2017-08-01T08:43:00-05:00</published><updated>2017-08-01T08:43:00-05:00</updated><author><name>Jason Figueroa</name></author><id>tag:jasonfigueroa.github.io,2017-08-01:/pelican-python3-makefile-error.html</id><summary type="html">&lt;p&gt;Full error:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; /home/&amp;lt;user&amp;gt;/path_to_project_root/output &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; python3 -m pelican.server
$ /usr/bin/python3: Error &lt;span class="k"&gt;while&lt;/span&gt; finding spec &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pelican.server&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;ImportError: No module named &lt;span class="s1"&gt;&amp;#39;pelican&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
$ Makefile:77: recipe &lt;span class="k"&gt;for&lt;/span&gt; target &lt;span class="s1"&gt;&amp;#39;serve&amp;#39;&lt;/span&gt; failed
$ make: *** &lt;span class="o"&gt;[&lt;/span&gt;serve&lt;span class="o"&gt;]&lt;/span&gt; Error &lt;span class="m"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Description:&lt;/p&gt;
&lt;p&gt;This error appears when trying to run &lt;strong&gt;make serve&lt;/strong&gt; from the terminal …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Full error:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; /home/&amp;lt;user&amp;gt;/path_to_project_root/output &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; python3 -m pelican.server
$ /usr/bin/python3: Error &lt;span class="k"&gt;while&lt;/span&gt; finding spec &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pelican.server&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;ImportError: No module named &lt;span class="s1"&gt;&amp;#39;pelican&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
$ Makefile:77: recipe &lt;span class="k"&gt;for&lt;/span&gt; target &lt;span class="s1"&gt;&amp;#39;serve&amp;#39;&lt;/span&gt; failed
$ make: *** &lt;span class="o"&gt;[&lt;/span&gt;serve&lt;span class="o"&gt;]&lt;/span&gt; Error &lt;span class="m"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Description:&lt;/p&gt;
&lt;p&gt;This error appears when trying to run &lt;strong&gt;make serve&lt;/strong&gt; from the terminal in a virtualenv environment where python3 is not installed and Makefile is configured for use with python3.&lt;/p&gt;
&lt;p&gt;I would assume installing a version of python3 in virtual environment may solve this but I haven’t tested this.
I fixed this by changing line 1 in Makefile from &lt;strong&gt;PY?=python3&lt;/strong&gt; to &lt;strong&gt;PY?=python&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Before:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Makefile screenshot configured for python3" src="images/Makefile-python3-config-resize.png"&gt;&lt;/p&gt;
&lt;p&gt;After:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Makefile screenshot configured for python2" src="images/Makefile-python2-config-resize.png"&gt;&lt;/p&gt;</content><category term="pelican"></category><category term="pelican"></category></entry><entry><title>Back to C</title><link href="https://jasonfigueroa.github.io/back-to-c.html" rel="alternate"></link><published>2017-03-29T18:38:00-05:00</published><updated>2017-03-29T18:38:00-05:00</updated><author><name>Jason Figueroa</name></author><id>tag:jasonfigueroa.github.io,2017-03-29:/back-to-c.html</id><summary type="html">&lt;p&gt;Why am I all of a sudden finding myself wanting to program in C? C is a very low level language which some say is real close to the metal, that sounds so awesome ;) . Any lower than that and one would have to program in assembly. I'll give you a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Why am I all of a sudden finding myself wanting to program in C? C is a very low level language which some say is real close to the metal, that sounds so awesome ;) . Any lower than that and one would have to program in assembly. I'll give you a peak at how my brain works and why I'm starting to program in C again.&lt;/p&gt;
&lt;p&gt;Lately Data Science has really been interesting me. Well it turns out that my university started offering a Masters program in Data Analytics in 2016. I took a look at the curriculum and it sounds like it's pretty spot on. It turns out there are some prerequisites I'll have to take care of in addition to an exam known as the GRE, ew (the exam not the prereqs) . I'll also have to take care of some prerequisites to some prerequisites, what am I getting myself into (－‸ლ) .  &lt;/p&gt;
&lt;p&gt;It turns out one of the prerequisites for Machine Learning I, one of the required courses, is Artificial Intelligence. I decided to dig around the internet for some sort of free Artifical Intelligence tutorials and discovered a free course on &lt;a href="https://www.edx.org/" target="_blank"&gt;edx&lt;/a&gt; from Columbia University, great! I completed the first week tutorials and scored well on the quiz. Feeling good about myself, I decided to take a look at the project for the second week. The project calls for implementations of Breadth First Search, Depth First Search, A-Star Search and IDA-Star Search. The first two I implemented in Data Structures and Algorithms II, a course I took in the Spring of 2015. The last two didn't sound familiar. &lt;/p&gt;
&lt;p&gt;So I drew a binary tree on my whiteboard and walked through the Breadth First Search. As an Abstract Data Type it's difficult to forget, but when I started thinking about the implementation things became increasingly more difficult. So I decided to brush up on my Data Structures and Algorithms, going all the way back to the what I saw in the first Data Structures and Algorithms course I took. The course was taught in C and the &lt;a href="https://www.youtube.com/user/mycodeschool" target="_blank"&gt;videos&lt;/a&gt; which I supplemented my coursework with were in C/C++. &lt;/p&gt;
&lt;p&gt;So far I've gone through all of the &lt;a href="https://www.youtube.com/playlist?list=PL2_aWCzGMAwLZp6LMUKI3cc7pgGsasm2_" target="_blank"&gt;Pointer videos&lt;/a&gt; except the last three. Now I'm starting the Search Algorithms videos. You know what I've realized, C IS AWESOME! It really is a fun language. I've also discoverd an &lt;a href="https://notabug.org/koz.ross/awesome-c" target="_blank"&gt;Awesome-List&lt;/a&gt; of C libraries. I really want to check out SQlite with C and some of the other neat things listed in Awesome-C but I've got to stay focused on Data Structures and Algorithms for the moment. This trip back to C has also made me curious about C++ but I have to stay on track. There just isn't enough hours in the day &amp;gt;:( .&lt;/p&gt;
&lt;p&gt;Anyway, I'm having fun and I will end up trying to implement some neat things in C. I would like to do some C programming on my Raspberry Pi, it just seems like the perfect platform to take advantage of this light and powerful language.&lt;/p&gt;
&lt;p&gt;Some of the resources that were mentioned above.&lt;/p&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="https://www.youtube.com/user/mycodeschool" target="_blank"&gt;mycodeschool&lt;/a&gt; - awesome youtube channel with lots of great tutorials&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://www.edx.org/" target="_blank"&gt;edX&lt;/a&gt; - free online courses from the top universities around the world&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://notabug.org/koz.ross/awesome-c" target="_blank"&gt;awesome-c&lt;/a&gt; - a very good list of C goodies&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This article was created using &lt;a href="http://dillinger.io/" target="_blank"&gt;dillinger&lt;/a&gt;, an open source markdown editor. &lt;/p&gt;</content><category term="c programming"></category><category term="c programming"></category></entry><entry><title>Remove Full Path From Terminal</title><link href="https://jasonfigueroa.github.io/remove-full-path-from-terminal.html" rel="alternate"></link><published>2017-03-08T08:43:00-06:00</published><updated>2017-03-08T08:43:00-06:00</updated><author><name>Jason Figueroa</name></author><id>tag:jasonfigueroa.github.io,2017-03-08:/remove-full-path-from-terminal.html</id><content type="html">&lt;p&gt;Here is a &lt;a href="http://askubuntu.com/questions/232086/remove-full-path-from-terminal" target="_blank"&gt;link&lt;/a&gt; from stackoverflow describing how to reduce the prompt in the terminal from displaying the entire current working directory to just displaying the current directory.&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot of terminal" src="images/bash-01-a.png"&gt;&lt;/p&gt;
&lt;p&gt;The snippet can be found &lt;a href="https://github.com/jasonfigueroa/snippets/blob/master/bash/bashrc-snippet.sh" target="_blank"&gt;here&lt;/a&gt;.&lt;/p&gt;</content><category term="bash"></category><category term="bash"></category></entry></feed>